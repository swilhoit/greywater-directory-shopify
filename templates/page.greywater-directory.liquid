{% comment %}
  Greywater Directory - Main page template
  URL: waterwisegroup.com/pages/greywater-directory
{% endcomment %}

<div class="page-width">
  <div class="page-header text-center">
    <h1 class="main-page-title">{{ page.title }}</h1>
    {% if page.content != blank %}
      <div class="rte">
        {{ page.content }}
      </div>
    {% endif %}
  </div>

  <div class="greywater-stats-grid">
    <div class="stat-card fully-legal">
      <div class="stat-number" id="fully-legal-count">0</div>
      <div class="stat-label">Fully Legal</div>
      <div class="stat-description">Comprehensive regulations allowing greywater systems with permits</div>
    </div>
    <div class="stat-card restricted">
      <div class="stat-number" id="restricted-count">0</div>
      <div class="stat-label">Restricted</div>
      <div class="stat-description">Limited use, often only specific system types allowed</div>
    </div>
    <div class="stat-card limited">
      <div class="stat-number" id="limited-count">0</div>
      <div class="stat-label">Limited</div>
      <div class="stat-description">Unclear regulations or case-by-case approval</div>
    </div>
    <div class="stat-card prohibited">
      <div class="stat-number" id="prohibited-count">0</div>
      <div class="stat-label">Prohibited</div>
      <div class="stat-description">No greywater systems permitted or no formal regulations</div>
    </div>
  </div>

  <div class="view-toggle">
    <button class="btn toggle-btn" onclick="showCardView()">Card View</button>
    <button class="btn toggle-btn active" onclick="showTableView()">Table View</button>
  </div>

  <div id="card-view" class="states-grid hidden"></div>
  
  <div id="table-view" class="states-table">
    <table>
      <thead>
        <tr>
          <th>State</th>
          <th>Status</th>
          <th>Permit Required</th>
          <th>Indoor Use</th>
          <th>Outdoor Use</th>
          <th>Key Restrictions</th>
        </tr>
      </thead>
      <tbody id="table-body"></tbody>
    </table>
  </div>

  <div class="legal-notice">
    <h3>
      <svg class="icon" viewBox="0 0 24 24">
        <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
      </svg>
      Important Legal Notice
    </h3>
    <p>This information is for general guidance only and may not reflect the most current regulations. Greywater laws vary significantly by state, county, and municipality. Always consult with local authorities and obtain necessary permits before installing any greywater system.</p>
  </div>
</div>

<style>
  .greywater-directory-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .main-page-title {
    font-size: 2.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
    color: rgb(var(--color-foreground));
  }

  .page-intro {
    font-size: 1.1rem;
    color: rgb(var(--color-foreground-75));
    max-width: 600px;
    margin: 0 auto 2rem;
    line-height: 1.6;
  }

  .greywater-stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    margin: 3rem 0;
  }

  .stat-card {
    background: rgb(var(--color-background));
    padding: 2rem;
    border-radius: 16px;
    text-align: center;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .stat-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--card-color);
  }

  .stat-card.fully-legal { --card-color: #27ae60; }
  .stat-card.restricted { --card-color: #f39c12; }
  .stat-card.limited { --card-color: #e67e22; }
  .stat-card.prohibited { --card-color: #e74c3c; }

  .stat-card:hover {
    transform: translateY(-4px);
    border-color: var(--card-color);
  }

  .stat-number {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    color: var(--card-color);
  }

  .stat-label {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: rgb(var(--color-foreground));
  }

  .stat-description {
    font-size: 0.9rem;
    color: rgb(var(--color-foreground-75));
    line-height: 1.4;
  }

  .view-toggle {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin: 30px 0;
  }

  .toggle-btn {
    padding: 12px 24px;
    border: 2px solid currentColor;
    background: white;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .toggle-btn.active {
    background: rgb(var(--color-button));
    color: rgb(var(--color-button-text));
  }

  .states-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 20px;
    margin-bottom: 40px;
  }

  .state-card {
    background: white;
    padding: 25px;
    border-radius: 12px;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .state-card:hover {
    transform: translateY(-2px);
  }

  .states-table {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    margin-bottom: 40px;
  }

  .states-table table {
    width: 100%;
    border-collapse: collapse;
  }

  .states-table th {
    background: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
    padding: 20px;
    text-align: left;
    font-weight: 600;
  }

  .states-table td {
    padding: 20px;
    border-bottom: 1px solid rgb(var(--color-border));
  }

  .states-table tbody tr {
    cursor: pointer;
  }

  .states-table tr:hover {
    background: rgb(var(--color-background));
  }

  .status-badge {
    white-space: nowrap;
  }

  .legal-notice {
    background: rgb(var(--color-background));
    border: 1px solid rgb(var(--color-border));
    border-radius: 12px;
    padding: 25px;
    margin-top: 40px;
  }

  .legal-notice h3 {
    color: rgb(var(--color-foreground));
    margin-bottom: 15px;
  }

  .hidden {
    display: none;
  }

  @media (max-width: 768px) {
    .greywater-stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .states-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  let stateData = [];

  async function loadStateData() {
    try {
      // Load from theme asset first
      const response = await fetch('{{ "greywater-state-directory.json" | asset_url }}');
      const data = await response.json();
      
      // Convert states object to array with proper status mapping
      stateData = Object.entries(data.states).map(([stateName, info]) => {
        let status = "Limited";
        if (info.legalStatus === "Legal" || info.legalStatus === "Legal and Regulated" || 
            info.legalStatus === "Regulated and Permitted" || info.legalStatus === "Comprehensive Regulations") {
          status = "Fully Legal";
        } else if (info.legalStatus === "Restricted" || info.legalStatus === "Highly Restricted" || 
                   info.legalStatus === "Limited" || info.legalStatus === "Limited/Unclear") {
          status = "Restricted";
        } else if (info.legalStatus === "Prohibited" || info.legalStatus === "No formal regulations" || 
                   info.legalStatus === "Effectively Prohibited") {
          status = "Prohibited";
        }

        return {
          state: stateName,
          status: status,
          description: info.description || `${info.legalStatus} - ${info.permitRequired} permit required`,
          details: info.details || info.recentChanges || "See regulatory agency for details",
          permitRequired: info.permitRequired || "Unknown",
          indoorUseAllowed: info.indoorUseAllowed || false,
          outdoorUseAllowed: info.outdoorUseAllowed || false,
          keyRestrictions: info.keyRestrictions || [],
          regulatoryAgency: info.primaryAgency,
          contactInfo: info.contactInfo,
          website: info.website
        };
      });
      
      updateStats();
      renderCardView();
      renderTableView();
    } catch (error) {
      console.error('Error loading state data:', error);
      // Fallback: try app proxy if theme asset fails
      try {
        const fallbackResponse = await fetch('/apps/greywater-directory?action=data');
        const fallbackData = await fallbackResponse.json();
        stateData = fallbackData.states;
        updateStats();
        renderCardView();
        renderTableView();
      } catch (fallbackError) {
        console.error('Error loading fallback data:', fallbackError);
      }
    }
  }

  function updateStats() {
    const counts = {
      'Fully Legal': 0,
      'Restricted': 0,
      'Limited': 0,
      'Prohibited': 0
    };

    stateData.forEach(state => {
      counts[state.status]++;
    });

    document.getElementById('fully-legal-count').textContent = counts['Fully Legal'];
    document.getElementById('restricted-count').textContent = counts['Restricted'];
    document.getElementById('limited-count').textContent = counts['Limited'];
    document.getElementById('prohibited-count').textContent = counts['Prohibited'];
  }

  function getStatusClass(status) {
    return status.toLowerCase().replace(/\s+/g, '-');
  }

  function renderCardView() {
    const cardView = document.getElementById('card-view');
    cardView.innerHTML = stateData.map(state => `
      <div class="state-card" onclick="showStateDetails('${state.state}')">
        <div class="state-header">
          <div class="state-name">${state.state}</div>
          <div class="status-badge status-${getStatusClass(state.status)}">${state.status}</div>
        </div>
        <div class="state-description">${state.description}</div>
        <div class="state-details">${state.details}</div>
      </div>
    `).join('');
  }

  function renderTableView() {
    const tableBody = document.getElementById('table-body');
    tableBody.innerHTML = stateData.map(state => `
      <tr onclick="showStateDetails('${state.state}')">
        <td><strong>${state.state}</strong></td>
        <td><span class="status-badge status-${getStatusClass(state.status)}">${state.status}</span></td>
        <td>${state.permitRequired}</td>
        <td>${state.indoorUseAllowed ? '✓' : '✗'}</td>
        <td>${state.outdoorUseAllowed ? '✓' : '✗'}</td>
        <td>${state.keyRestrictions ? state.keyRestrictions.slice(0, 2).join('. ') : ''}</td>
      </tr>
    `).join('');
  }

  function showCardView() {
    document.getElementById('card-view').classList.remove('hidden');
    document.getElementById('table-view').classList.add('hidden');
    document.querySelectorAll('.toggle-btn').forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
  }

  function showTableView() {
    document.getElementById('card-view').classList.add('hidden');
    document.getElementById('table-view').classList.remove('hidden');
    document.querySelectorAll('.toggle-btn').forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
  }

  function showStateDetails(stateName) {
    const stateSlug = stateName.toLowerCase().replace(/\s+/g, '-');
    window.location.href = `/pages/greywater-directory-${stateSlug}`;
  }

  document.addEventListener('DOMContentLoaded', loadStateData);
</script>