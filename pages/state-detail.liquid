{% comment %}
  State Detail Page - Liquid Template for Shopify Theme Integration
  Shows detailed greywater regulations for individual states
{% endcomment %}

{% assign page_title = 'State Greywater Laws' %}
{% assign page_description = 'Detailed greywater regulations and requirements' %}

<div class="page-width greywater-state-detail-container">
  <nav class="breadcrumb" style="margin-bottom: 2rem;">
    <a href="{{ shop.url }}/apps/greywater-directory" class="breadcrumb__link">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
        <path d="M19 12H5M12 19l-7-7 7-7"/>
      </svg>
      Back to All States
    </a>
  </nav>

  <div class="state-detail-header">
    <div class="state-header-content">
      <h1 id="state-name" class="h1">Loading...</h1>
      <div class="state-status-section">
        <svg id="status-icon" class="status-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="10"/>
        </svg>
        <span id="status-badge" class="status-badge">Loading...</span>
      </div>
    </div>
    <div class="state-summary-box">
      <p id="state-summary" class="rte">Loading state information...</p>
    </div>
  </div>

  <div class="grid grid--2-col grid--1-col-tablet-down">
    <div class="grid__item">
      <div class="info-card">
        <h2 class="info-card__title">
          <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M7 8V6a5 5 0 1110 0v2h3a1 1 0 011 1v10a1 1 0 01-1 1H4a1 1 0 01-1-1V9a1 1 0 011-1h3zm0 2H5v8h14v-8h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 01-2 0v-1zm2-2h6V6a3 3 0 00-6 0v2z"/>
          </svg>
          Regulatory Information
        </h2>
        <div class="info-card__content">
          <div class="info-item">
            <div class="info-label">Classification</div>
            <div class="info-value" id="classification">-</div>
          </div>
          <div class="info-item">
            <div class="info-label">Governing Code</div>
            <div class="info-value" id="governing-code">-</div>
          </div>
          <div class="info-item">
            <div class="info-label">Permit Required</div>
            <div class="info-value" id="permit-required">-</div>
          </div>
          <div class="info-item" id="threshold-section" style="display:none;">
            <div class="info-label">Permit Threshold</div>
            <div class="info-value" id="permit-threshold">-</div>
          </div>
        </div>
      </div>
    </div>

    <div class="grid__item">
      <div class="info-card">
        <h2 class="info-card__title">
          <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M19 2H5a2 2 0 00-2 2v14a2 2 0 002 2h4l3 3 3-3h4a2 2 0 002-2V4a2 2 0 00-2-2zm-7 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm0 12h-1v-6h1v6z"/>
          </svg>
          Agency Contact
        </h2>
        <div class="info-card__content">
          <div class="info-item">
            <div class="info-label">Primary Agency</div>
            <div class="info-value" id="primary-agency">-</div>
          </div>
          <div class="info-item" id="phone-section" style="display:none;">
            <div class="info-label">Phone</div>
            <div class="info-value" id="agency-phone">-</div>
          </div>
          <div class="info-item" id="contact-section" style="display:none;">
            <div class="info-label">Contact</div>
            <div class="info-value" id="agency-contact">-</div>
          </div>
          <div class="info-item" id="website-section" style="display:none;">
            <div class="info-label">Website</div>
            <div class="info-value">
              <a href="#" id="agency-website" class="link" target="_blank">Visit Official Website</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="grid grid--2-col grid--1-col-tablet-down" style="margin-top: 2rem;">
    <div class="grid__item">
      <div class="info-card use-card" id="indoor-card">
        <h2 class="info-card__title">
          <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M3 13h2v8H3zm4-8h2v16H7zm4-2h2v18h-2zm4 4h2v14h-2zm4-2h2v16h-2z"/>
          </svg>
          Indoor Use
        </h2>
        <div class="info-card__content">
          <div class="use-status" id="indoor-status">
            <span>Checking...</span>
          </div>
        </div>
      </div>
    </div>

    <div class="grid__item">
      <div class="info-card use-card" id="outdoor-card">
        <h2 class="info-card__title">
          <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M14 2l6 7-5 5v4l-3-1-3 1v-4l-5-5 6-7v5h4V2z"/>
          </svg>
          Outdoor Use
        </h2>
        <div class="info-card__content">
          <div class="use-status" id="outdoor-status">
            <span>Checking...</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="info-card" style="margin-top: 2rem;">
    <h2 class="info-card__title">
      <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
        <path d="M21 10c-1.5 0-2.7 1.4-3 2.7-.3-1.3-1.5-2.7-3-2.7s-2.7 1.4-3 2.7c-.3-1.3-1.5-2.7-3-2.7s-2.7 1.4-3 2.7C5.7 11.4 4.5 10 3 10H2v2h1c.4 0 1 .7 1 2s-.6 2-1 2H2v2h1c1.5 0 2.7-1.4 3-2.7.3 1.3 1.5 2.7 3 2.7s2.7-1.4 3-2.7c.3 1.3 1.5 2.7 3 2.7s2.7-1.4 3-2.7c.3 1.3 1.5 2.7 3 2.7h1v-2h-1c-.4 0-1-.7-1-2s.6-2 1-2h1v-2h-1z"/>
      </svg>
      Approved Uses
    </h2>
    <div class="info-card__content">
      <div id="approved-uses" class="badge-container">
        <span class="badge">Loading...</span>
      </div>
    </div>
  </div>

  <div class="info-card" style="margin-top: 2rem;">
    <h2 class="info-card__title">
      <svg class="info-card__icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
        <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
      </svg>
      Key Restrictions
    </h2>
    <div class="info-card__content">
      <ul id="restrictions-list" class="list-unstyled">
        <li>Loading restrictions...</li>
      </ul>
    </div>
  </div>

  <div id="recent-changes-section" class="announcement-bar" style="display:none; margin-top: 2rem;">
    <div class="announcement-bar__message">
      <strong>Recent Changes:</strong>
      <span id="recent-changes-text"></span>
    </div>
  </div>

  <div class="cta-section" style="margin-top: 3rem; padding: 3rem; background: rgba(var(--color-base-accent-1), 0.1); text-align: center; border-radius: 1rem;">
    <h2 id="cta-title" class="h2">Ready to Install a Greywater System?</h2>
    <p class="cta-text" style="margin: 1rem 0 2rem;">Our experts can help you navigate regulations and select the right system for your property</p>
    <div class="button-group">
      <a href="{{ routes.contact_url }}" class="button button--primary">Get Expert Guidance</a>
      <a href="{{ shop.url }}/apps/greywater-directory" class="button button--secondary">View All States</a>
    </div>
  </div>
</div>

<style>
  .greywater-state-detail-container {
    padding: 2rem 0;
  }

  .breadcrumb__link {
    display: inline-flex;
    align-items: center;
    color: rgba(var(--color-foreground), 0.75);
    text-decoration: none;
    font-size: 0.9rem;
  }

  .breadcrumb__link:hover {
    color: rgb(var(--color-foreground));
    text-decoration: underline;
  }

  .state-detail-header {
    margin-bottom: 3rem;
    padding: 2rem;
    background: rgb(var(--color-background));
    border: 1px solid rgba(var(--color-border), 0.08);
    border-radius: 1rem;
  }

  .state-header-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.5rem;
  }

  .state-status-section {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .status-icon {
    width: 24px;
    height: 24px;
  }

  .status-badge {
    padding: 0.5rem 1rem;
    border-radius: 2rem;
    font-size: 0.9rem;
    font-weight: 600;
    border: 2px solid;
  }

  .status-legal {
    background: rgba(39, 174, 96, 0.1);
    color: #27ae60;
    border-color: #27ae60;
  }

  .status-regulated {
    background: rgba(33, 150, 243, 0.1);
    color: #2196f3;
    border-color: #2196f3;
  }

  .status-limited {
    background: rgba(243, 156, 18, 0.1);
    color: #f39c12;
    border-color: #f39c12;
  }

  .status-prohibited {
    background: rgba(231, 76, 60, 0.1);
    color: #e74c3c;
    border-color: #e74c3c;
  }

  .state-summary-box {
    background: rgba(var(--color-base-accent-1), 0.05);
    border-radius: 0.5rem;
    padding: 1.5rem;
  }

  .info-card {
    background: rgb(var(--color-background));
    border: 1px solid rgba(var(--color-border), 0.08);
    border-radius: 1rem;
    padding: 1.5rem;
    margin-bottom: 1rem;
  }

  .info-card__title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .info-card__icon {
    fill: rgba(var(--color-foreground), 0.6);
  }

  .info-item {
    margin-bottom: 1rem;
  }

  .info-label {
    font-size: 0.85rem;
    color: rgba(var(--color-foreground), 0.6);
    margin-bottom: 0.25rem;
  }

  .info-value {
    font-weight: 600;
    color: rgb(var(--color-foreground));
  }

  .use-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
  }

  .use-allowed {
    color: #27ae60;
  }

  .use-prohibited {
    color: #e74c3c;
  }

  .use-card.allowed {
    border-color: rgba(39, 174, 96, 0.3);
  }

  .use-card.prohibited {
    border-color: rgba(231, 76, 60, 0.3);
  }

  .badge-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .badge {
    background: rgba(var(--color-base-accent-1), 0.1);
    color: rgb(var(--color-foreground));
    padding: 0.25rem 0.75rem;
    border-radius: 0.5rem;
    font-size: 0.85rem;
    border: 1px solid rgba(var(--color-border), 0.08);
  }

  .list-unstyled {
    list-style: none;
    padding: 0;
  }

  .list-unstyled li {
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    color: rgba(var(--color-foreground), 0.8);
  }

  .list-unstyled li::before {
    content: "•";
    color: #f39c12;
    font-weight: bold;
    margin-top: 0.1rem;
  }

  .button-group {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  @media screen and (max-width: 749px) {
    .state-header-content {
      flex-direction: column;
      gap: 1rem;
    }

    .button-group {
      flex-direction: column;
    }

    .button-group .button {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    loadStateData();
  });

  async function loadStateData() {
    const urlParams = new URLSearchParams(window.location.search);
    const stateName = urlParams.get('state');
    
    if (!stateName) {
      window.location.href = '{{ shop.url }}/apps/greywater-directory';
      return;
    }

    try {
      const response = await fetch(`{{ shop.url }}/apps/greywater-directory?action=state&state=${encodeURIComponent(stateName)}`);
      const data = await response.json();
      
      if (data.error) {
        throw new Error(data.error);
      }

      displayStateData(data);
    } catch (error) {
      console.error('Error loading state data:', error);
      document.getElementById('state-name').textContent = 'State Not Found';
      document.getElementById('state-summary').textContent = 'The requested state could not be found.';
    }
  }

  function displayStateData(data) {
    // Update page title and header
    document.title = `${data.state} Greywater Laws & Regulations - {{ shop.name }}`;
    document.getElementById('state-name').textContent = `${data.state} Greywater Laws`;
    document.getElementById('state-summary').textContent = data.summary;
    
    // Status badge and icon
    const statusBadge = document.getElementById('status-badge');
    statusBadge.textContent = data.legalStatus;
    statusBadge.className = 'status-badge ' + getStatusClass(data.legalStatus);
    updateStatusIcon(data.legalStatus);
    
    // Regulatory information
    document.getElementById('classification').textContent = data.regulatoryClassification;
    document.getElementById('governing-code').textContent = data.governingCode;
    document.getElementById('permit-required').textContent = data.permitRequired;
    
    if (data.permitThresholdGpd !== null) {
      document.getElementById('threshold-section').style.display = 'block';
      document.getElementById('permit-threshold').textContent = `${data.permitThresholdGpd} gallons per day`;
    }
    
    // Agency information
    document.getElementById('primary-agency').textContent = data.primaryAgency;
    
    if (data.agencyPhone) {
      document.getElementById('phone-section').style.display = 'block';
      document.getElementById('agency-phone').textContent = data.agencyPhone;
    }
    
    if (data.agencyContact && !data.agencyContact.includes('http')) {
      document.getElementById('contact-section').style.display = 'block';
      document.getElementById('agency-contact').textContent = data.agencyContact;
    }
    
    if (data.governmentWebsite) {
      document.getElementById('website-section').style.display = 'block';
      document.getElementById('agency-website').href = data.governmentWebsite;
    }
    
    // Use permissions
    displayUseStatus('indoor', data.indoorUseAllowed);
    displayUseStatus('outdoor', data.outdoorUseAllowed);
    
    // Approved uses
    displayApprovedUses(data.approvedUses);
    
    // Restrictions
    displayRestrictions(data.keyRestrictions);
    
    // Recent changes
    if (data.recentChanges) {
      document.getElementById('recent-changes-section').style.display = 'block';
      document.getElementById('recent-changes-text').textContent = data.recentChanges;
    }
    
    // Update CTA
    document.getElementById('cta-title').textContent = `Ready to Install a Greywater System in ${data.state}?`;
  }

  function getStatusClass(status) {
    const lowerStatus = status.toLowerCase();
    if (lowerStatus.includes('legal') && !lowerStatus.includes('illegal')) return 'status-legal';
    if (lowerStatus.includes('regulated') || lowerStatus.includes('permitted')) return 'status-regulated';
    if (lowerStatus.includes('limited') || lowerStatus.includes('unclear')) return 'status-limited';
    if (lowerStatus.includes('prohibited') || lowerStatus.includes('no formal')) return 'status-prohibited';
    return 'status-limited';
  }

  function updateStatusIcon(status) {
    const icon = document.getElementById('status-icon');
    const lowerStatus = status.toLowerCase();
    
    if (lowerStatus.includes('legal') && !lowerStatus.includes('illegal')) {
      icon.innerHTML = '<path d="M20 6L9 17l-5-5"/>';
      icon.setAttribute('stroke', '#27ae60');
    } else if (lowerStatus.includes('prohibited') || lowerStatus.includes('no formal')) {
      icon.innerHTML = '<path d="M18 6L6 18M6 6l12 12"/>';
      icon.setAttribute('stroke', '#e74c3c');
    } else {
      icon.innerHTML = '<path d="M12 9v4m0 4h.01"/>';
      icon.setAttribute('stroke', '#f39c12');
    }
  }

  function displayUseStatus(type, allowed) {
    const statusElement = document.getElementById(`${type}-status`);
    const cardElement = document.getElementById(`${type}-card`);
    
    if (allowed) {
      statusElement.innerHTML = `
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#27ae60" stroke-width="2">
          <path d="M20 6L9 17l-5-5"/>
        </svg>
        <span class="use-allowed">Allowed</span>
      `;
      cardElement.classList.add('allowed');
    } else {
      statusElement.innerHTML = `
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#e74c3c" stroke-width="2">
          <path d="M18 6L6 18M6 6l12 12"/>
        </svg>
        <span class="use-prohibited">Not Allowed</span>
      `;
      cardElement.classList.add('prohibited');
    }
  }

  function displayApprovedUses(uses) {
    const container = document.getElementById('approved-uses');
    if (uses && uses.length > 0) {
      container.innerHTML = uses.map(use => `<span class="badge">${use}</span>`).join('');
    } else {
      container.innerHTML = '<span style="color: rgba(var(--color-foreground), 0.6);">No approved uses specified</span>';
    }
  }

  function displayRestrictions(restrictions) {
    const list = document.getElementById('restrictions-list');
    if (restrictions && restrictions.length > 0) {
      list.innerHTML = restrictions.map(restriction => `<li>${restriction}</li>`).join('');
    } else {
      list.innerHTML = '<li style="color: rgba(var(--color-foreground), 0.6);">No specific restrictions listed</li>';
    }
  }
</script>